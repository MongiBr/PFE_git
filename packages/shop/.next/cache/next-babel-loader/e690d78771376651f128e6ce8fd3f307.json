{"ast":null,"code":"var _jsxFileName = \"/Volumes/Second/npm/PFE_git/charioTN/packages/shop/components/SearchBox/SearchBox.tsx\";\nvar __jsx = React.createElement;\nimport InputSearch from \"./Input\";\nimport React, { useEffect, useRef, useState } from \"react\";\nimport SearchResults from \"./SearchResults\";\nimport SearchWrapper, { SearchBoxWrapper, CurrentType } from \"./SearchBox.style\";\nimport { SearchIcon } from \"../AllSvgIcon\";\nimport NavLink from \"components/NavLink/NavLink\";\n\nconst Search = ({\n  suggestions,\n  buttonText,\n  buttonIcon,\n  inputStyle,\n  style,\n  bordered,\n  hideType,\n  showSvg,\n  autoSuggestion,\n  placeholder,\n  className,\n  handleSearch,\n  onClick,\n  value,\n  expand,\n  minimal,\n  pathname\n}) => {\n  const {\n    0: searchValue,\n    1: setSearchValue\n  } = useState(\"\");\n  const {\n    0: toggleSuggestion,\n    1: setToggleSuggestion\n  } = useState(false);\n  const {\n    0: toggleSearch,\n    1: setToggleSearch\n  } = useState(false);\n  let searchRef = useRef(null);\n  useEffect(() => {\n    document.addEventListener(\"click\", handleClickOutside, false);\n    return () => {\n      document.removeEventListener(\"click\", handleClickOutside, false);\n    };\n  }, []);\n\n  const handleSearchInput = event => {\n    setSearchValue(event.target.value);\n    setToggleSuggestion(true);\n    handleSearch(event.target.value);\n  };\n\n  const ucwords = str => {\n    const newString = str.replace(/\\//g, \"\");\n    const humanString = newString.replace(/-/g, \" \");\n    return (humanString + \"\").replace(/^([a-z])|\\s+([a-z])/g, function ($1) {\n      return $1.toUpperCase();\n    });\n  };\n\n  const setSuggestion = suggestion => {\n    setSearchValue(suggestion);\n    setToggleSuggestion(false);\n  };\n\n  const handleClickOutside = event => {\n    if (searchRef.current && !searchRef.current.contains(event.target)) {\n      setToggleSuggestion(false);\n      setToggleSearch(false);\n    }\n  };\n\n  const onClearBtnClick = () => {\n    setSearchValue(\"\");\n  };\n\n  const MenuArray = [{\n    label: \"Sousse\"\n  }, {\n    label: \"Hamem Sousse\"\n  }, {\n    label: \"Jawhara\"\n  }, {\n    label: \"Sahloul\"\n  }, {\n    label: \"Kalaa Sghira\"\n  }];\n  const {\n    0: activeMenu\n  } = useState({\n    label: \"Choose a city\"\n  });\n\n  const NavItem = item => {\n    return __jsx(NavLink, {\n      onClick: () => useState(item.label),\n      label: item.label,\n      href: \"grocery\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 7\n      }\n    });\n  };\n\n  return __jsx(SearchWrapper, {\n    className: className,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 5\n    }\n  }, __jsx(SearchBoxWrapper, {\n    className: `${hideType ? \"hideType\" : \"\"} ${expand === true ? toggleSearch ? \"expanded\" : \"collapsed\" : \"\"} ${minimal === true ? \"minimal\" : \"\"}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 7\n    }\n  }, pathname && pathname !== \"/\" ? __jsx(CurrentType, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 11\n    }\n  }, ucwords(pathname)) : __jsx(CurrentType, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 11\n    }\n  }, \"Magasin\"), __jsx(InputSearch, {\n    type: \"text\",\n    value: value,\n    onChange: handleSearchInput,\n    onFocus: () => setToggleSearch(true),\n    onBlur: () => setToggleSearch(false),\n    buttonIcon: buttonIcon,\n    buttonText: buttonText,\n    placeholder: placeholder,\n    style: inputStyle,\n    bordered: bordered,\n    showSvg: showSvg,\n    onClick: () => onClick(searchValue),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 9\n    }\n  })), autoSuggestion && toggleSuggestion ? __jsx(SearchResults, {\n    suggestions: suggestions,\n    clearSearch: onClearBtnClick,\n    setSuggestionValue: suggestion => setSuggestion(suggestion),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 9\n    }\n  }) : null);\n};\n\nSearch.defaultProps = {\n  bordered: false,\n  autoSuggestion: false,\n  buttonText: \"Search\",\n  buttonIcon: __jsx(SearchIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 15\n    }\n  }),\n  placeholder: \"Search your products from here\",\n  inputStyle: {\n    width: \"100%\"\n  }\n};\nexport default Search;","map":{"version":3,"sources":["/Volumes/Second/npm/PFE_git/charioTN/packages/shop/components/SearchBox/SearchBox.tsx"],"names":["InputSearch","React","useEffect","useRef","useState","SearchResults","SearchWrapper","SearchBoxWrapper","CurrentType","SearchIcon","NavLink","Search","suggestions","buttonText","buttonIcon","inputStyle","style","bordered","hideType","showSvg","autoSuggestion","placeholder","className","handleSearch","onClick","value","expand","minimal","pathname","searchValue","setSearchValue","toggleSuggestion","setToggleSuggestion","toggleSearch","setToggleSearch","searchRef","document","addEventListener","handleClickOutside","removeEventListener","handleSearchInput","event","target","ucwords","str","newString","replace","humanString","$1","toUpperCase","setSuggestion","suggestion","current","contains","onClearBtnClick","MenuArray","label","activeMenu","NavItem","item","defaultProps","width"],"mappings":"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","sourcesContent":["import InputSearch from \"./Input\";\nimport React, { useEffect, useRef, useState } from \"react\";\nimport SearchResults from \"./SearchResults\";\nimport SearchWrapper, {\n  SearchBoxWrapper,\n  CurrentType,\n} from \"./SearchBox.style\";\nimport { SearchIcon } from \"../AllSvgIcon\";\nimport Popover from \"components/Popover/Popover\";\nimport SelectPage from \"components/Location/DropDown\";\nimport Button from \"components/Button/Button\";\nimport Dropdown from \"components/Dropdown/Dropdown\";\nimport { openModal } from \"@redq/reuse-modal\";\nimport Select from \"components/Select/Select\";\nimport NavLink from \"components/NavLink/NavLink\";\nimport {\n  FruitsVegetable,\n  MenuDown,\n  FacialCare,\n  DressIcon,\n  Handbag,\n  HelpIcon,\n  BookIcon,\n  FurnitureIcon,\n  DEFlag,\n  CNFlag,\n  USFlag,\n  ILFlag,\n  ESFlag,\n  SAFlag,\n} from \"components/AllSvgIcon\";\nimport HeaderWrapper, {\n  DropDownArrow,\n  SelectedType,\n  MainMenu,\n} from \"containers/LayoutContainer/Header/Header.style\";\n\ntype SearchBoxProps = {\n  suggestions?: string[];\n  buttonText?: string;\n  buttonIcon?: React.ReactNode;\n  inputStyle?: React.CSSProperties;\n  style?: React.CSSProperties;\n  bordered?: boolean;\n  hideType?: boolean;\n  showSvg?: boolean;\n  expand?: boolean;\n  minimal?: boolean;\n  autoSuggestion?: boolean;\n  placeholder?: string;\n  className?: string;\n  handleSearch?: Function;\n  onClick?: Function;\n  value?: any;\n  pathname?: string;\n};\n\nconst Search: React.FC<SearchBoxProps> = ({\n  suggestions,\n  buttonText,\n  buttonIcon,\n  inputStyle,\n  style,\n  bordered,\n  hideType,\n  showSvg,\n  autoSuggestion,\n  placeholder,\n  className,\n  handleSearch,\n  onClick,\n  value,\n  expand,\n  minimal,\n  pathname,\n}) => {\n  const [searchValue, setSearchValue] = useState(\"\");\n  const [toggleSuggestion, setToggleSuggestion] = useState(false);\n  const [toggleSearch, setToggleSearch] = useState(false);\n\n  let searchRef = useRef<HTMLInputElement>(null);\n\n  useEffect(() => {\n    document.addEventListener(\"click\", handleClickOutside, false);\n    return () => {\n      document.removeEventListener(\"click\", handleClickOutside, false);\n    };\n  }, []);\n\n  const handleSearchInput = (event: any) => {\n    setSearchValue(event.target.value);\n    setToggleSuggestion(true);\n    handleSearch(event.target.value);\n  };\n\n  const ucwords = (str: string) => {\n    const newString = str.replace(/\\//g, \"\");\n    const humanString = newString.replace(/-/g, \" \");\n    return (humanString + \"\").replace(/^([a-z])|\\s+([a-z])/g, function($1) {\n      return $1.toUpperCase();\n    });\n  };\n\n  const setSuggestion = (suggestion: any) => {\n    setSearchValue(suggestion);\n    setToggleSuggestion(false);\n  };\n\n  const handleClickOutside = (event: any) => {\n    if (searchRef.current && !searchRef.current.contains(event.target)) {\n      setToggleSuggestion(false);\n      setToggleSearch(false);\n    }\n  };\n\n  const onClearBtnClick = () => {\n    setSearchValue(\"\");\n  };\n\n  const MenuArray = [\n    {\n      label: \"Sousse\",\n    },\n    {\n      label: \"Hamem Sousse\",\n    },\n    {\n      label: \"Jawhara\",\n    },\n    {\n      label: \"Sahloul\",\n    },\n    {\n      label: \"Kalaa Sghira\",\n    },\n  ];\n\n  const [activeMenu] = useState({\n    label: \"Choose a city\",\n  });\n\n  const NavItem = (item: any) => {\n    return (\n      <NavLink\n        onClick={() => useState(item.label)}\n        label={item.label}\n        href={\"grocery\"}\n      />\n    );\n  };\n\n  return (\n    <SearchWrapper className={className}>\n      <SearchBoxWrapper\n        className={`${hideType ? \"hideType\" : \"\"} ${\n          expand === true ? (toggleSearch ? \"expanded\" : \"collapsed\") : \"\"\n        } ${minimal === true ? \"minimal\" : \"\"}`}\n      >\n        {pathname && pathname !== \"/\" ? (\n          <CurrentType>{ucwords(pathname)}</CurrentType>\n        ) : (\n          <CurrentType>Magasin</CurrentType>\n        )}\n        <InputSearch\n          type=\"text\"\n          value={value}\n          onChange={handleSearchInput}\n          onFocus={() => setToggleSearch(true)}\n          onBlur={() => setToggleSearch(false)}\n          buttonIcon={buttonIcon}\n          buttonText={buttonText}\n          placeholder={placeholder}\n          style={inputStyle}\n          bordered={bordered}\n          showSvg={showSvg}\n          onClick={() => onClick(searchValue)}\n        />\n      </SearchBoxWrapper>\n      {autoSuggestion && toggleSuggestion ? (\n        <SearchResults\n          suggestions={suggestions}\n          clearSearch={onClearBtnClick}\n          setSuggestionValue={(suggestion: any) => setSuggestion(suggestion)}\n        />\n      ) : null}\n    </SearchWrapper>\n  );\n};\n\nSearch.defaultProps = {\n  bordered: false,\n  autoSuggestion: false,\n  buttonText: \"Search\",\n  buttonIcon: <SearchIcon />,\n  placeholder: \"Search your products from here\",\n  inputStyle: {\n    width: \"100%\",\n  },\n};\n\nexport default Search;\n"]},"metadata":{},"sourceType":"module"}