{"ast":null,"code":"var _jsxFileName = \"/Volumes/Second/npm/PFE_git/charioTN/packages/shop/components/SearchBox/SearchBox.tsx\";\nvar __jsx = React.createElement;\nimport React, { useEffect, useRef, useState } from \"react\";\nimport SearchResults from \"./SearchResults\";\nimport SearchWrapper, { SearchBoxWrapper } from \"./SearchBox.style\";\nimport { SearchIcon } from \"../AllSvgIcon\";\nimport Popover from \"components/Popover/Popover\";\nimport NavLink from \"components/NavLink/NavLink\";\nimport { FruitsVegetable, MenuDown, FacialCare } from \"components/AllSvgIcon\";\nimport { DropDownArrow, SelectedType, TypeIcon } from \"containers/LayoutContainer/Header/Header.style\";\nconst MenuArray = [{\n  icon: __jsx(FruitsVegetable, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 11\n    }\n  }),\n  label: \"Grocery\"\n}, {\n  label: \"Foods\",\n  icon: __jsx(FacialCare, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 11\n    }\n  })\n}];\nconst LocationsArray = [{\n  state: \"Sousse\",\n  cities: [\"Kalaa\", \"Jaouhra\"]\n}, {\n  state: \"Tunis\",\n  cities: [\"Lac\", \"La fayette\"]\n}];\n\nconst Search = ({\n  suggestions,\n  buttonText,\n  buttonIcon,\n  inputStyle,\n  style,\n  bordered,\n  hideType,\n  showSvg,\n  autoSuggestion,\n  placeholder,\n  className,\n  handleSearch,\n  onClick,\n  value,\n  expand,\n  minimal,\n  pathname\n}) => {\n  const {\n    0: searchValue,\n    1: setSearchValue\n  } = useState(\"\");\n  const {\n    0: toggleSuggestion,\n    1: setToggleSuggestion\n  } = useState(false);\n  const {\n    0: toggleSearch,\n    1: setToggleSearch\n  } = useState(false);\n  let searchRef = useRef(null);\n  useEffect(() => {\n    document.addEventListener(\"click\", handleClickOutside, false);\n    return () => {\n      document.removeEventListener(\"click\", handleClickOutside, false);\n    };\n  }, []);\n\n  const handleSearchInput = event => {\n    setSearchValue(event.target.value);\n    setToggleSuggestion(true);\n    handleSearch(event.target.value);\n  };\n\n  const ucwords = str => {\n    const newString = str.replace(/\\//g, \"\");\n    const humanString = newString.replace(/-/g, \" \");\n    return (humanString + \"\").replace(/^([a-z])|\\s+([a-z])/g, function ($1) {\n      return $1.toUpperCase();\n    });\n  };\n\n  const setSuggestion = suggestion => {\n    setSearchValue(suggestion);\n    setToggleSuggestion(false);\n  };\n\n  const handleClickOutside = event => {\n    if (searchRef.current && !searchRef.current.contains(event.target)) {\n      setToggleSuggestion(false);\n      setToggleSearch(false);\n    }\n  };\n\n  const onClearBtnClick = () => {\n    setSearchValue(\"\");\n  };\n\n  const {\n    0: activeMenu,\n    1: setActiveMenu\n  } = useState({\n    icon: __jsx(FruitsVegetable, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 11\n      }\n    }),\n    label: \"Grocery\"\n  });\n  const {\n    0: activeLocation,\n    1: setActiveLocation\n  } = useState({\n    state: \"Choose city\",\n    cities: []\n  });\n  const {\n    0: activeCity,\n    1: setActiveCity\n  } = useState(\"\");\n\n  const StateItem = item => {\n    return __jsx(\"span\", {\n      key: item.state,\n      onClick: () => {\n        setActiveLocation(item);\n        setActiveCity(item.cities[0]);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 7\n      }\n    }, item.state);\n  };\n\n  const CityItem = item => {\n    return __jsx(\"span\", {\n      key: item,\n      onClick: () => setActiveCity(item),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 7\n      }\n    }, item);\n  };\n\n  const NavItem = item => {\n    return __jsx(NavLink, {\n      key: item.link,\n      onClick: () => setActiveMenu(item),\n      className: \"menu-item\",\n      href: item.link,\n      label: item.label,\n      icon: item.icon,\n      iconClass: \"menu-item-icon\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 7\n      }\n    });\n  };\n\n  return __jsx(SearchWrapper, {\n    className: className,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 5\n    }\n  }, __jsx(SearchBoxWrapper, {\n    className: `${hideType ? \"hideType\" : \"\"} ${expand === true ? toggleSearch ? \"expanded\" : \"collapsed\" : \"\"} ${minimal === true ? \"minimal\" : \"\"}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 7\n    }\n  }, __jsx(Popover, {\n    className: \"right\",\n    handler: __jsx(SelectedType, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 13\n      }\n    }, __jsx(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 15\n      }\n    }, __jsx(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 17\n      }\n    }, activeLocation.state)), __jsx(DropDownArrow, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 15\n      }\n    }, __jsx(MenuDown, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 17\n      }\n    }))),\n    content: __jsx(React.Fragment, null, LocationsArray.map(StateItem)),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 9\n    }\n  }), __jsx(Popover, {\n    className: \"right\",\n    handler: __jsx(SelectedType, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 13\n      }\n    }, __jsx(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 15\n      }\n    }, __jsx(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 17\n      }\n    }, activeCity)), __jsx(DropDownArrow, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 15\n      }\n    }, __jsx(MenuDown, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 17\n      }\n    }))),\n    content: __jsx(React.Fragment, null, activeLocation.cities.map(CityItem)),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 9\n    }\n  }), __jsx(Popover, {\n    className: \"right\",\n    handler: __jsx(SelectedType, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 13\n      }\n    }, __jsx(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 15\n      }\n    }, __jsx(TypeIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 17\n      }\n    }, activeMenu.icon), __jsx(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 17\n      }\n    }, activeMenu.label)), __jsx(DropDownArrow, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 15\n      }\n    }, __jsx(MenuDown, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 17\n      }\n    }))),\n    content: __jsx(React.Fragment, null, MenuArray.map(NavItem)),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 9\n    }\n  })), autoSuggestion && toggleSuggestion ? __jsx(SearchResults, {\n    suggestions: suggestions,\n    clearSearch: onClearBtnClick,\n    setSuggestionValue: suggestion => setSuggestion(suggestion),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 255,\n      columnNumber: 9\n    }\n  }) : null);\n};\n\nSearch.defaultProps = {\n  bordered: false,\n  autoSuggestion: false,\n  buttonText: \"Search\",\n  buttonIcon: __jsx(SearchIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 269,\n      columnNumber: 15\n    }\n  }),\n  placeholder: \"Search your products from here\",\n  inputStyle: {\n    width: \"100%\"\n  }\n};\nexport default Search;","map":{"version":3,"sources":["/Volumes/Second/npm/PFE_git/charioTN/packages/shop/components/SearchBox/SearchBox.tsx"],"names":["React","useEffect","useRef","useState","SearchResults","SearchWrapper","SearchBoxWrapper","SearchIcon","Popover","NavLink","FruitsVegetable","MenuDown","FacialCare","DropDownArrow","SelectedType","TypeIcon","MenuArray","icon","label","LocationsArray","state","cities","Search","suggestions","buttonText","buttonIcon","inputStyle","style","bordered","hideType","showSvg","autoSuggestion","placeholder","className","handleSearch","onClick","value","expand","minimal","pathname","searchValue","setSearchValue","toggleSuggestion","setToggleSuggestion","toggleSearch","setToggleSearch","searchRef","document","addEventListener","handleClickOutside","removeEventListener","handleSearchInput","event","target","ucwords","str","newString","replace","humanString","$1","toUpperCase","setSuggestion","suggestion","current","contains","onClearBtnClick","activeMenu","setActiveMenu","activeLocation","setActiveLocation","activeCity","setActiveCity","StateItem","item","CityItem","NavItem","link","map","defaultProps","width"],"mappings":"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","sourcesContent":["import InputSearch from \"./Input\";\nimport React, { useEffect, useRef, useState } from \"react\";\nimport SearchResults from \"./SearchResults\";\nimport SearchWrapper, {\n  SearchBoxWrapper,\n  CurrentType,\n} from \"./SearchBox.style\";\nimport { SearchIcon } from \"../AllSvgIcon\";\nimport Popover from \"components/Popover/Popover\";\nimport SelectPage from \"components/Location/DropDown\";\nimport Button from \"components/Button/Button\";\nimport Dropdown from \"components/Dropdown/Dropdown\";\nimport { openModal } from \"@redq/reuse-modal\";\nimport Select from \"components/Select/Select\";\nimport NavLink from \"components/NavLink/NavLink\";\nimport {\n  FruitsVegetable,\n  MenuDown,\n  FacialCare,\n  DressIcon,\n  Handbag,\n  HelpIcon,\n  BookIcon,\n  FurnitureIcon,\n  DEFlag,\n  CNFlag,\n  USFlag,\n  ILFlag,\n  ESFlag,\n  SAFlag,\n} from \"components/AllSvgIcon\";\nimport HeaderWrapper, {\n  DropDownArrow,\n  SelectedType,\n  MainMenu,\n  TypeIcon,\n} from \"containers/LayoutContainer/Header/Header.style\";\n\ntype SearchBoxProps = {\n  suggestions?: string[];\n  buttonText?: string;\n  buttonIcon?: React.ReactNode;\n  inputStyle?: React.CSSProperties;\n  style?: React.CSSProperties;\n  bordered?: boolean;\n  hideType?: boolean;\n  showSvg?: boolean;\n  expand?: boolean;\n  minimal?: boolean;\n  autoSuggestion?: boolean;\n  placeholder?: string;\n  className?: string;\n  handleSearch?: Function;\n  onClick?: Function;\n  value?: any;\n  pathname?: string;\n};\n\nconst MenuArray = [\n  {\n    icon: <FruitsVegetable />,\n    label: \"Grocery\",\n  },\n  {\n    label: \"Foods\",\n    icon: <FacialCare />,\n  },\n];\n\nconst LocationsArray = [\n  {\n    state: \"Sousse\",\n    cities: [\"Kalaa\", \"Jaouhra\"],\n  },\n  {\n    state: \"Tunis\",\n    cities: [\"Lac\", \"La fayette\"],\n  },\n];\n\nconst Search: React.FC<SearchBoxProps> = ({\n  suggestions,\n  buttonText,\n  buttonIcon,\n  inputStyle,\n  style,\n  bordered,\n  hideType,\n  showSvg,\n  autoSuggestion,\n  placeholder,\n  className,\n  handleSearch,\n  onClick,\n  value,\n  expand,\n  minimal,\n  pathname,\n}) => {\n  const [searchValue, setSearchValue] = useState(\"\");\n  const [toggleSuggestion, setToggleSuggestion] = useState(false);\n  const [toggleSearch, setToggleSearch] = useState(false);\n\n  let searchRef = useRef<HTMLInputElement>(null);\n\n  useEffect(() => {\n    document.addEventListener(\"click\", handleClickOutside, false);\n    return () => {\n      document.removeEventListener(\"click\", handleClickOutside, false);\n    };\n  }, []);\n\n  const handleSearchInput = (event: any) => {\n    setSearchValue(event.target.value);\n    setToggleSuggestion(true);\n    handleSearch(event.target.value);\n  };\n\n  const ucwords = (str: string) => {\n    const newString = str.replace(/\\//g, \"\");\n    const humanString = newString.replace(/-/g, \" \");\n    return (humanString + \"\").replace(/^([a-z])|\\s+([a-z])/g, function($1) {\n      return $1.toUpperCase();\n    });\n  };\n\n  const setSuggestion = (suggestion: any) => {\n    setSearchValue(suggestion);\n    setToggleSuggestion(false);\n  };\n\n  const handleClickOutside = (event: any) => {\n    if (searchRef.current && !searchRef.current.contains(event.target)) {\n      setToggleSuggestion(false);\n      setToggleSearch(false);\n    }\n  };\n\n  const onClearBtnClick = () => {\n    setSearchValue(\"\");\n  };\n\n  const [activeMenu, setActiveMenu] = useState({\n    icon: <FruitsVegetable />,\n    label: \"Grocery\",\n  });\n\n  const [activeLocation, setActiveLocation] = useState({\n    state: \"Choose city\",\n    cities: [],\n  });\n  const [activeCity, setActiveCity] = useState(\"\");\n\n  const StateItem = (item: any) => {\n    return (\n      <span\n        key={item.state}\n        onClick={() => {\n          setActiveLocation(item);\n          setActiveCity(item.cities[0]);\n        }}\n      >\n        {item.state}\n      </span>\n    );\n  };\n  const CityItem = (item: any) => {\n    return (\n      <span key={item} onClick={() => setActiveCity(item)}>\n        {item}\n      </span>\n    );\n  };\n  const NavItem = (item: any) => {\n    return (\n      <NavLink\n        key={item.link}\n        onClick={() => setActiveMenu(item)}\n        className=\"menu-item\"\n        href={item.link}\n        label={item.label}\n        icon={item.icon}\n        iconClass=\"menu-item-icon\"\n      />\n    );\n  };\n\n  return (\n    <SearchWrapper className={className}>\n      <SearchBoxWrapper\n        className={`${hideType ? \"hideType\" : \"\"} ${\n          expand === true ? (toggleSearch ? \"expanded\" : \"collapsed\") : \"\"\n        } ${minimal === true ? \"minimal\" : \"\"}`}\n      >\n        <Popover\n          className=\"right\"\n          handler={\n            <SelectedType>\n              <span>\n                <span>{activeLocation.state}</span>\n              </span>\n              <DropDownArrow>\n                <MenuDown />\n              </DropDownArrow>\n            </SelectedType>\n          }\n          content={<>{LocationsArray.map(StateItem)}</>}\n        />\n        <Popover\n          className=\"right\"\n          handler={\n            <SelectedType>\n              <span>\n                <span>{activeCity}</span>\n              </span>\n              <DropDownArrow>\n                <MenuDown />\n              </DropDownArrow>\n            </SelectedType>\n          }\n          content={<>{activeLocation.cities.map(CityItem)}</>}\n        />\n\n        <Popover\n          className=\"right\"\n          handler={\n            <SelectedType>\n              <span>\n                <TypeIcon>{activeMenu.icon}</TypeIcon>\n                <span>{activeMenu.label}</span>\n              </span>\n              <DropDownArrow>\n                <MenuDown />\n              </DropDownArrow>\n            </SelectedType>\n          }\n          content={<>{MenuArray.map(NavItem)}</>}\n        />\n        {/* <InputSearch\n          type=\"text\"\n          value={value}\n          onChange={handleSearchInput}\n          onFocus={() => setToggleSearch(true)}\n          onBlur={() => setToggleSearch(false)}\n          buttonIcon={buttonIcon}\n          buttonText={buttonText}\n          placeholder={placeholder}\n          style={inputStyle}\n          bordered={bordered}\n          showSvg={showSvg}\n          onClick={() => onClick(searchValue)}\n        /> */}\n      </SearchBoxWrapper>\n      {autoSuggestion && toggleSuggestion ? (\n        <SearchResults\n          suggestions={suggestions}\n          clearSearch={onClearBtnClick}\n          setSuggestionValue={(suggestion: any) => setSuggestion(suggestion)}\n        />\n      ) : null}\n    </SearchWrapper>\n  );\n};\n\nSearch.defaultProps = {\n  bordered: false,\n  autoSuggestion: false,\n  buttonText: \"Search\",\n  buttonIcon: <SearchIcon />,\n  placeholder: \"Search your products from here\",\n  inputStyle: {\n    width: \"100%\",\n  },\n};\n\nexport default Search;\n"]},"metadata":{},"sourceType":"module"}