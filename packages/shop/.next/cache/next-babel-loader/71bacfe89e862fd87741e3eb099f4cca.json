{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nvar _this = this,\n    _jsxFileName = \"/Volumes/Second/npm/PFE_git/packages/shop/containers/Sidebar/Sidebar.tsx\";\n\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useContext } from \"react\";\nimport { useRouter } from \"next/router\";\nimport { useQuery } from \"@apollo/react-hooks\";\nimport Sticky from \"react-stickynode\";\nimport { Scrollbars } from \"react-custom-scrollbars\";\nimport Popover from \"components/Popover/Popover\";\nimport CategoryDropdown from \"components/CategoryDropdown/SpringDropdown\";\nimport { ArrowDropDown, CategoryIcon } from \"components/AllSvgIcon\";\nimport { SearchContext } from \"contexts/search/search.context\";\nimport { useStickyState } from \"contexts/app/app.provider\";\nimport { SidebarMobileLoader, SidebarLoader } from \"components/Placeholder/Placeholder\";\nimport { CategoryWrapper, PopoverHandler, PopoverWrapper, SidebarWrapper } from \"./Sidebar.style\";\nimport { Accessories, BathOil, BeautyHealth, Beverage, Breakfast, Cooking, Dairy, Deodorent, Eyes, Face, FacialCare, FruitsVegetable, HandBags, HomeCleaning, LaptopBags, Lips, MeatFish, OralCare, OuterWear, Pants, PetCare, Purse, ShavingNeeds, Shirts, ShoulderBags, Skirts, Snacks, Tops, Wallet, WomenDress } from \"components/AllSvgIcon\";\nimport { GET_CATEGORIES } from \"graphql/query/category.query\";\nvar iconTypes = {\n  Accessories: Accessories,\n  BathOil: BathOil,\n  BeautyHealth: BeautyHealth,\n  Beverage: Beverage,\n  Breakfast: Breakfast,\n  Cooking: Cooking,\n  Dairy: Dairy,\n  Deodorent: Deodorent,\n  Eyes: Eyes,\n  Face: Face,\n  FacialCare: FacialCare,\n  FruitsVegetable: FruitsVegetable,\n  HandBags: HandBags,\n  HomeCleaning: HomeCleaning,\n  LaptopBags: LaptopBags,\n  Lips: Lips,\n  MeatFish: MeatFish,\n  OralCare: OralCare,\n  OuterWear: OuterWear,\n  Pants: Pants,\n  PetCare: PetCare,\n  Purse: Purse,\n  ShavingNeeds: ShavingNeeds,\n  Shirts: Shirts,\n  ShoulderBags: ShoulderBags,\n  Skirts: Skirts,\n  Snacks: Snacks,\n  Tops: Tops,\n  Wallet: Wallet,\n  WomenDress: WomenDress\n};\n\nvar SidebarCategory = function SidebarCategory(_ref) {\n  var _ref$deviceType = _ref.deviceType,\n      mobile = _ref$deviceType.mobile,\n      tablet = _ref$deviceType.tablet,\n      desktop = _ref$deviceType.desktop,\n      type = _ref.type;\n\n  var _useContext = useContext(SearchContext),\n      state = _useContext.state,\n      dispatch = _useContext.dispatch;\n\n  var router = useRouter();\n  var pathname = router.pathname,\n      query = router.query;\n\n  var _useQuery = useQuery(GET_CATEGORIES, {\n    variables: {\n      type: type\n    }\n  }),\n      data = _useQuery.data,\n      loading = _useQuery.loading;\n\n  var selectedQueries = query.category;\n\n  var _handleCategorySelection = function handleCategorySelection(slug) {\n    dispatch({\n      type: \"UPDATE\",\n      payload: _objectSpread({}, state, {\n        page: 1,\n        category: \"\".concat(slug)\n      })\n    });\n    var updatedQuery = state.text ? {\n      text: state.text,\n      category: slug\n    } : {\n      category: slug\n    };\n    router.push({\n      pathname: pathname,\n      query: updatedQuery\n    });\n  };\n\n  var isSidebarSticky = useStickyState(\"isSidebarSticky\");\n\n  if (!data || loading) {\n    if (mobile || tablet) {\n      return __jsx(SidebarMobileLoader, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 14\n        }\n      });\n    }\n\n    return __jsx(SidebarLoader, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 12\n      }\n    });\n  }\n\n  var selecteLang = \"en\";\n\n  if (true) {\n    selecteLang = localStorage.getItem(\"lang\");\n  }\n\n  return __jsx(CategoryWrapper, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 5\n    }\n  }, (mobile || tablet) && __jsx(Popover, {\n    handler: __jsx(PopoverHandler, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 13\n      }\n    }, __jsx(\"div\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 15\n      }\n    }, __jsx(CategoryIcon, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 17\n      }\n    }), \"Select your Category\"), __jsx(\"div\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 15\n      }\n    }, __jsx(ArrowDropDown, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 17\n      }\n    }))),\n    className: \"category-popover\",\n    content: __jsx(CategoryDropdown, {\n      items: data.categories,\n      iconList: iconTypes,\n      handleCategorySelection: function handleCategorySelection(slug) {\n        return _handleCategorySelection(slug);\n      },\n      selectedQueries: selectedQueries,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 13\n      }\n    }),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 9\n    }\n  }), desktop && __jsx(React.Fragment, null, __jsx(PopoverWrapper, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 11\n    }\n  }, __jsx(Popover, {\n    handler: __jsx(PopoverHandler, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 17\n      }\n    }, __jsx(\"div\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 19\n      }\n    }, __jsx(CategoryIcon, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 21\n      }\n    }), \"Select your Category\"), __jsx(\"div\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 19\n      }\n    }, __jsx(ArrowDropDown, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 21\n      }\n    }))),\n    className: \"category-popover\",\n    content: __jsx(React.Fragment, null, __jsx(CategoryDropdown, {\n      items: data.categories,\n      iconList: iconTypes,\n      handleCategorySelection: function handleCategorySelection(slug) {\n        return _handleCategorySelection(slug);\n      },\n      selectedQueries: selectedQueries,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 19\n      }\n    })),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 13\n    }\n  })), __jsx(SidebarWrapper, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 11\n    }\n  }, __jsx(Sticky, {\n    enabled: isSidebarSticky,\n    top: 110,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 13\n    }\n  }, __jsx(Scrollbars, {\n    universal: true,\n    autoHide: true,\n    autoHeight: true,\n    autoHeightMax: 688,\n    renderView: function renderView(props) {\n      return __jsx(\"div\", _extends({}, props, {\n        style: _objectSpread({}, props.style, {\n          marginLeft: selecteLang === \"ar\" || selecteLang === \"he\" ? props.style.marginRight : 0,\n          marginRight: selecteLang === \"ar\" || selecteLang === \"he\" ? 0 : props.style.marginRight\n        }),\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 19\n        }\n      }));\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 15\n    }\n  }, __jsx(CategoryDropdown, {\n    items: data.categories,\n    iconList: iconTypes,\n    className: \"categoryWrapper\",\n    handleCategorySelection: function handleCategorySelection(id) {\n      return _handleCategorySelection(id);\n    },\n    selectedQueries: selectedQueries,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 17\n    }\n  }))))));\n};\n\nexport default SidebarCategory;","map":{"version":3,"sources":["/Volumes/Second/npm/PFE_git/packages/shop/containers/Sidebar/Sidebar.tsx"],"names":["React","useContext","useRouter","useQuery","Sticky","Scrollbars","Popover","CategoryDropdown","ArrowDropDown","CategoryIcon","SearchContext","useStickyState","SidebarMobileLoader","SidebarLoader","CategoryWrapper","PopoverHandler","PopoverWrapper","SidebarWrapper","Accessories","BathOil","BeautyHealth","Beverage","Breakfast","Cooking","Dairy","Deodorent","Eyes","Face","FacialCare","FruitsVegetable","HandBags","HomeCleaning","LaptopBags","Lips","MeatFish","OralCare","OuterWear","Pants","PetCare","Purse","ShavingNeeds","Shirts","ShoulderBags","Skirts","Snacks","Tops","Wallet","WomenDress","GET_CATEGORIES","iconTypes","SidebarCategory","deviceType","mobile","tablet","desktop","type","state","dispatch","router","pathname","query","variables","data","loading","selectedQueries","category","handleCategorySelection","slug","payload","page","updatedQuery","text","push","isSidebarSticky","selecteLang","localStorage","getItem","categories","props","style","marginLeft","marginRight","id"],"mappings":"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","sourcesContent":["import React, { useContext } from \"react\";\nimport { useRouter } from \"next/router\";\nimport { useQuery } from \"@apollo/react-hooks\";\nimport Sticky from \"react-stickynode\";\nimport { Scrollbars } from \"react-custom-scrollbars\";\nimport Popover from \"components/Popover/Popover\";\nimport CategoryDropdown from \"components/CategoryDropdown/SpringDropdown\";\nimport { ArrowDropDown, CategoryIcon } from \"components/AllSvgIcon\";\nimport { SearchContext } from \"contexts/search/search.context\";\nimport { useStickyState } from \"contexts/app/app.provider\";\nimport {\n  SidebarMobileLoader,\n  SidebarLoader,\n} from \"components/Placeholder/Placeholder\";\n\nimport {\n  CategoryWrapper,\n  PopoverHandler,\n  PopoverWrapper,\n  SidebarWrapper,\n  Loading,\n} from \"./Sidebar.style\";\nimport {\n  Accessories,\n  BathOil,\n  BeautyHealth,\n  Beverage,\n  Breakfast,\n  Cooking,\n  Dairy,\n  Deodorent,\n  Eyes,\n  Face,\n  FacialCare,\n  FruitsVegetable,\n  HandBags,\n  HomeCleaning,\n  LaptopBags,\n  Lips,\n  MeatFish,\n  OralCare,\n  OuterWear,\n  Pants,\n  PetCare,\n  Purse,\n  ShavingNeeds,\n  Shirts,\n  ShoulderBags,\n  Skirts,\n  Snacks,\n  Tops,\n  Wallet,\n  WomenDress,\n} from \"components/AllSvgIcon\";\n\nimport { GET_CATEGORIES } from \"graphql/query/category.query\";\n\nlet iconTypes = {\n  Accessories: Accessories,\n  BathOil: BathOil,\n  BeautyHealth: BeautyHealth,\n  Beverage: Beverage,\n  Breakfast: Breakfast,\n  Cooking: Cooking,\n  Dairy: Dairy,\n  Deodorent: Deodorent,\n  Eyes: Eyes,\n  Face: Face,\n  FacialCare: FacialCare,\n  FruitsVegetable: FruitsVegetable,\n  HandBags: HandBags,\n  HomeCleaning: HomeCleaning,\n  LaptopBags: LaptopBags,\n  Lips: Lips,\n  MeatFish: MeatFish,\n  OralCare: OralCare,\n  OuterWear: OuterWear,\n  Pants: Pants,\n  PetCare: PetCare,\n  Purse: Purse,\n  ShavingNeeds: ShavingNeeds,\n  Shirts: Shirts,\n  ShoulderBags: ShoulderBags,\n  Skirts: Skirts,\n  Snacks: Snacks,\n  Tops: Tops,\n  Wallet: Wallet,\n  WomenDress: WomenDress,\n};\n\ntype SidebarCategoryProps = {\n  deviceType?: {\n    mobile: string;\n    tablet: string;\n    desktop: boolean;\n  };\n  type?: string;\n};\n\nconst SidebarCategory: React.FC<SidebarCategoryProps> = ({\n  deviceType: { mobile, tablet, desktop },\n  type,\n}) => {\n  const { state, dispatch } = useContext(SearchContext);\n  const router = useRouter();\n  const { pathname, query } = router;\n  const { data, loading } = useQuery(GET_CATEGORIES, {\n    variables: { type },\n  });\n\n  const selectedQueries = query.category;\n\n  const handleCategorySelection = (slug: string) => {\n    dispatch({\n      type: \"UPDATE\",\n      payload: {\n        ...state,\n        page: 1,\n        category: `${slug}`,\n      },\n    });\n    const updatedQuery = state.text\n      ? { text: state.text, category: slug }\n      : { category: slug };\n    router.push({\n      pathname: pathname,\n      query: updatedQuery,\n    });\n  };\n  const isSidebarSticky = useStickyState(\"isSidebarSticky\");\n\n  if (!data || loading) {\n    if (mobile || tablet) {\n      return <SidebarMobileLoader />;\n    }\n\n    return <SidebarLoader />;\n  }\n  let selecteLang = \"en\";\n  if (typeof window !== \"undefined\") {\n    selecteLang = localStorage.getItem(\"lang\");\n  }\n\n  return (\n    <CategoryWrapper>\n      {(mobile || tablet) && (\n        <Popover\n          handler={\n            <PopoverHandler>\n              <div>\n                <CategoryIcon />\n                Select your Category\n              </div>\n              <div>\n                <ArrowDropDown />\n              </div>\n            </PopoverHandler>\n          }\n          className=\"category-popover\"\n          content={\n            <CategoryDropdown\n              items={data.categories}\n              iconList={iconTypes}\n              handleCategorySelection={(slug: any) =>\n                handleCategorySelection(slug)\n              }\n              selectedQueries={selectedQueries}\n            />\n          }\n        />\n      )}\n      {desktop && (\n        <>\n          <PopoverWrapper>\n            <Popover\n              handler={\n                <PopoverHandler>\n                  <div>\n                    <CategoryIcon />\n                    Select your Category\n                  </div>\n                  <div>\n                    <ArrowDropDown />\n                  </div>\n                </PopoverHandler>\n              }\n              className=\"category-popover\"\n              content={\n                <>\n                  <CategoryDropdown\n                    items={data.categories}\n                    iconList={iconTypes}\n                    handleCategorySelection={(slug: any) =>\n                      handleCategorySelection(slug)\n                    }\n                    selectedQueries={selectedQueries}\n                  />\n                </>\n              }\n            />\n          </PopoverWrapper>\n\n          <SidebarWrapper>\n            <Sticky enabled={isSidebarSticky} top={110}>\n              <Scrollbars\n                universal\n                autoHide\n                autoHeight\n                autoHeightMax={688}\n                renderView={(props) => (\n                  <div\n                    {...props}\n                    style={{\n                      ...props.style,\n                      marginLeft:\n                        selecteLang === \"ar\" || selecteLang === \"he\"\n                          ? props.style.marginRight\n                          : 0,\n                      marginRight:\n                        selecteLang === \"ar\" || selecteLang === \"he\"\n                          ? 0\n                          : props.style.marginRight,\n                    }}\n                  />\n                )}\n              >\n                <CategoryDropdown\n                  items={data.categories}\n                  iconList={iconTypes}\n                  className=\"categoryWrapper\"\n                  handleCategorySelection={(id: any) =>\n                    handleCategorySelection(id)\n                  }\n                  selectedQueries={selectedQueries}\n                />\n              </Scrollbars>\n            </Sticky>\n          </SidebarWrapper>\n        </>\n      )}\n    </CategoryWrapper>\n  );\n};\n\nexport default SidebarCategory;\n"]},"metadata":{},"sourceType":"module"}