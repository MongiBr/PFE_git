{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/Volumes/Second/npm/PFE_git/charioTN/packages/shop/components/SearchBox/SearchBox.tsx\";\n\nvar __jsx = React.createElement;\nimport InputSearch from \"./Input\";\nimport React, { useEffect, useRef, useState } from \"react\";\nimport SearchResults from \"./SearchResults\";\nimport SearchWrapper, { SearchBoxWrapper } from \"./SearchBox.style\";\nimport { SearchIcon } from \"../AllSvgIcon\";\nimport Popover from \"components/Popover/Popover\";\nimport { MenuDown } from \"components/AllSvgIcon\";\nimport { DropDownArrow, SelectedType } from \"containers/LayoutContainer/Header/Header.style\";\nvar MenuArray = [{\n  label: \"Sousse\"\n}, {\n  label: \"Hamem Sousse\"\n}, {\n  label: \"Jawhara\"\n}, {\n  label: \"Sahloul\"\n}, {\n  label: \"Kalaa Sghira\"\n}];\n\nvar Search = function Search(_ref) {\n  var suggestions = _ref.suggestions,\n      buttonText = _ref.buttonText,\n      buttonIcon = _ref.buttonIcon,\n      inputStyle = _ref.inputStyle,\n      style = _ref.style,\n      bordered = _ref.bordered,\n      hideType = _ref.hideType,\n      showSvg = _ref.showSvg,\n      autoSuggestion = _ref.autoSuggestion,\n      placeholder = _ref.placeholder,\n      className = _ref.className,\n      handleSearch = _ref.handleSearch,\n      _onClick = _ref.onClick,\n      value = _ref.value,\n      expand = _ref.expand,\n      minimal = _ref.minimal,\n      pathname = _ref.pathname;\n\n  var _useState = useState(\"\"),\n      searchValue = _useState[0],\n      setSearchValue = _useState[1];\n\n  var _useState2 = useState(false),\n      toggleSuggestion = _useState2[0],\n      setToggleSuggestion = _useState2[1];\n\n  var _useState3 = useState(false),\n      toggleSearch = _useState3[0],\n      setToggleSearch = _useState3[1];\n\n  var searchRef = useRef(null);\n  useEffect(function () {\n    document.addEventListener(\"click\", handleClickOutside, false);\n    return function () {\n      document.removeEventListener(\"click\", handleClickOutside, false);\n    };\n  }, []);\n\n  var handleSearchInput = function handleSearchInput(event) {\n    setSearchValue(event.target.value);\n    setToggleSuggestion(true);\n    handleSearch(event.target.value);\n  };\n\n  var ucwords = function ucwords(str) {\n    var newString = str.replace(/\\//g, \"\");\n    var humanString = newString.replace(/-/g, \" \");\n    return (humanString + \"\").replace(/^([a-z])|\\s+([a-z])/g, function ($1) {\n      return $1.toUpperCase();\n    });\n  };\n\n  var setSuggestion = function setSuggestion(suggestion) {\n    setSearchValue(suggestion);\n    setToggleSuggestion(false);\n  };\n\n  var handleClickOutside = function handleClickOutside(event) {\n    if (searchRef.current && !searchRef.current.contains(event.target)) {\n      setToggleSuggestion(false);\n      setToggleSearch(false);\n    }\n  };\n\n  var onClearBtnClick = function onClearBtnClick() {\n    setSearchValue(\"\");\n  };\n\n  var _useState4 = useState({\n    label: \"Choose a city\"\n  }),\n      activeMenu = _useState4[0],\n      setActiveMenu = _useState4[1];\n\n  var NavItem = function NavItem(item) {\n    return __jsx(\"span\", {\n      key: item.label,\n      onClick: function onClick() {\n        return setActiveMenu(item);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 7\n      }\n    }, item.label);\n  };\n\n  return __jsx(SearchWrapper, {\n    className: className,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 5\n    }\n  }, __jsx(SearchBoxWrapper, {\n    className: \"\".concat(hideType ? \"hideType\" : \"\", \" \").concat(expand === true ? toggleSearch ? \"expanded\" : \"collapsed\" : \"\", \" \").concat(minimal === true ? \"minimal\" : \"\"),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 7\n    }\n  }, __jsx(Popover, {\n    className: \"right\",\n    handler: __jsx(SelectedType, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 13\n      }\n    }, __jsx(\"span\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 15\n      }\n    }, __jsx(\"span\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 17\n      }\n    }, activeMenu.label)), __jsx(DropDownArrow, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 15\n      }\n    }, __jsx(MenuDown, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 17\n      }\n    }))),\n    content: __jsx(React.Fragment, null, MenuArray.map(NavItem)),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 9\n    }\n  }), __jsx(InputSearch, {\n    type: \"text\",\n    value: value,\n    onChange: handleSearchInput,\n    onFocus: function onFocus() {\n      return setToggleSearch(true);\n    },\n    onBlur: function onBlur() {\n      return setToggleSearch(false);\n    },\n    buttonIcon: buttonIcon,\n    buttonText: buttonText,\n    placeholder: placeholder,\n    style: inputStyle,\n    bordered: bordered,\n    showSvg: showSvg,\n    onClick: function onClick() {\n      return _onClick(searchValue);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 9\n    }\n  })), autoSuggestion && toggleSuggestion ? __jsx(SearchResults, {\n    suggestions: suggestions,\n    clearSearch: onClearBtnClick,\n    setSuggestionValue: function setSuggestionValue(suggestion) {\n      return setSuggestion(suggestion);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 9\n    }\n  }) : null);\n};\n\nSearch.defaultProps = {\n  bordered: false,\n  autoSuggestion: false,\n  buttonText: \"Search\",\n  buttonIcon: __jsx(SearchIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 15\n    }\n  }),\n  placeholder: \"Search your products from here\",\n  inputStyle: {\n    width: \"100%\"\n  }\n};\nexport default Search;","map":{"version":3,"sources":["/Volumes/Second/npm/PFE_git/charioTN/packages/shop/components/SearchBox/SearchBox.tsx"],"names":["InputSearch","React","useEffect","useRef","useState","SearchResults","SearchWrapper","SearchBoxWrapper","SearchIcon","Popover","MenuDown","DropDownArrow","SelectedType","MenuArray","label","Search","suggestions","buttonText","buttonIcon","inputStyle","style","bordered","hideType","showSvg","autoSuggestion","placeholder","className","handleSearch","onClick","value","expand","minimal","pathname","searchValue","setSearchValue","toggleSuggestion","setToggleSuggestion","toggleSearch","setToggleSearch","searchRef","document","addEventListener","handleClickOutside","removeEventListener","handleSearchInput","event","target","ucwords","str","newString","replace","humanString","$1","toUpperCase","setSuggestion","suggestion","current","contains","onClearBtnClick","activeMenu","setActiveMenu","NavItem","item","map","defaultProps","width"],"mappings":"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","sourcesContent":["import InputSearch from \"./Input\";\nimport React, { useEffect, useRef, useState } from \"react\";\nimport SearchResults from \"./SearchResults\";\nimport SearchWrapper, {\n  SearchBoxWrapper,\n  CurrentType,\n} from \"./SearchBox.style\";\nimport { SearchIcon } from \"../AllSvgIcon\";\nimport Popover from \"components/Popover/Popover\";\nimport SelectPage from \"components/Location/DropDown\";\nimport Button from \"components/Button/Button\";\nimport Dropdown from \"components/Dropdown/Dropdown\";\nimport { openModal } from \"@redq/reuse-modal\";\nimport Select from \"components/Select/Select\";\nimport NavLink from \"components/NavLink/NavLink\";\nimport {\n  FruitsVegetable,\n  MenuDown,\n  FacialCare,\n  DressIcon,\n  Handbag,\n  HelpIcon,\n  BookIcon,\n  FurnitureIcon,\n  DEFlag,\n  CNFlag,\n  USFlag,\n  ILFlag,\n  ESFlag,\n  SAFlag,\n} from \"components/AllSvgIcon\";\nimport HeaderWrapper, {\n  DropDownArrow,\n  SelectedType,\n  MainMenu,\n} from \"containers/LayoutContainer/Header/Header.style\";\n\ntype SearchBoxProps = {\n  suggestions?: string[];\n  buttonText?: string;\n  buttonIcon?: React.ReactNode;\n  inputStyle?: React.CSSProperties;\n  style?: React.CSSProperties;\n  bordered?: boolean;\n  hideType?: boolean;\n  showSvg?: boolean;\n  expand?: boolean;\n  minimal?: boolean;\n  autoSuggestion?: boolean;\n  placeholder?: string;\n  className?: string;\n  handleSearch?: Function;\n  onClick?: Function;\n  value?: any;\n  pathname?: string;\n};\n\nconst MenuArray = [\n  {\n    label: \"Sousse\",\n  },\n  {\n    label: \"Hamem Sousse\",\n  },\n  {\n    label: \"Jawhara\",\n  },\n  {\n    label: \"Sahloul\",\n  },\n  {\n    label: \"Kalaa Sghira\",\n  },\n];\n\nconst Search: React.FC<SearchBoxProps> = ({\n  suggestions,\n  buttonText,\n  buttonIcon,\n  inputStyle,\n  style,\n  bordered,\n  hideType,\n  showSvg,\n  autoSuggestion,\n  placeholder,\n  className,\n  handleSearch,\n  onClick,\n  value,\n  expand,\n  minimal,\n  pathname,\n}) => {\n  const [searchValue, setSearchValue] = useState(\"\");\n  const [toggleSuggestion, setToggleSuggestion] = useState(false);\n  const [toggleSearch, setToggleSearch] = useState(false);\n\n  let searchRef = useRef<HTMLInputElement>(null);\n\n  useEffect(() => {\n    document.addEventListener(\"click\", handleClickOutside, false);\n    return () => {\n      document.removeEventListener(\"click\", handleClickOutside, false);\n    };\n  }, []);\n\n  const handleSearchInput = (event: any) => {\n    setSearchValue(event.target.value);\n    setToggleSuggestion(true);\n    handleSearch(event.target.value);\n  };\n\n  const ucwords = (str: string) => {\n    const newString = str.replace(/\\//g, \"\");\n    const humanString = newString.replace(/-/g, \" \");\n    return (humanString + \"\").replace(/^([a-z])|\\s+([a-z])/g, function($1) {\n      return $1.toUpperCase();\n    });\n  };\n\n  const setSuggestion = (suggestion: any) => {\n    setSearchValue(suggestion);\n    setToggleSuggestion(false);\n  };\n\n  const handleClickOutside = (event: any) => {\n    if (searchRef.current && !searchRef.current.contains(event.target)) {\n      setToggleSuggestion(false);\n      setToggleSearch(false);\n    }\n  };\n\n  const onClearBtnClick = () => {\n    setSearchValue(\"\");\n  };\n\n  const [activeMenu, setActiveMenu] = useState({\n    label: \"Choose a city\",\n  });\n\n  const NavItem = (item: any) => {\n    return (\n      <span key={item.label} onClick={() => setActiveMenu(item)}>\n        {item.label}\n      </span>\n    );\n  };\n\n  return (\n    <SearchWrapper className={className}>\n      <SearchBoxWrapper\n        className={`${hideType ? \"hideType\" : \"\"} ${\n          expand === true ? (toggleSearch ? \"expanded\" : \"collapsed\") : \"\"\n        } ${minimal === true ? \"minimal\" : \"\"}`}\n      >\n        <Popover\n          className=\"right\"\n          handler={\n            <SelectedType>\n              <span>\n                <span>{activeMenu.label}</span>\n              </span>\n              <DropDownArrow>\n                <MenuDown />\n              </DropDownArrow>\n            </SelectedType>\n          }\n          content={<>{MenuArray.map(NavItem)}</>}\n        />\n        <InputSearch\n          type=\"text\"\n          value={value}\n          onChange={handleSearchInput}\n          onFocus={() => setToggleSearch(true)}\n          onBlur={() => setToggleSearch(false)}\n          buttonIcon={buttonIcon}\n          buttonText={buttonText}\n          placeholder={placeholder}\n          style={inputStyle}\n          bordered={bordered}\n          showSvg={showSvg}\n          onClick={() => onClick(searchValue)}\n        />\n      </SearchBoxWrapper>\n      {autoSuggestion && toggleSuggestion ? (\n        <SearchResults\n          suggestions={suggestions}\n          clearSearch={onClearBtnClick}\n          setSuggestionValue={(suggestion: any) => setSuggestion(suggestion)}\n        />\n      ) : null}\n    </SearchWrapper>\n  );\n};\n\nSearch.defaultProps = {\n  bordered: false,\n  autoSuggestion: false,\n  buttonText: \"Search\",\n  buttonIcon: <SearchIcon />,\n  placeholder: \"Search your products from here\",\n  inputStyle: {\n    width: \"100%\",\n  },\n};\n\nexport default Search;\n"]},"metadata":{},"sourceType":"module"}