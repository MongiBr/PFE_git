{"ast":null,"code":"var _jsxFileName = \"/Volumes/Second/npm/PFE_git/packages/shop/containers/ServiceProvidersList/ServiceProvidersList.tsx\";\nvar __jsx = React.createElement;\nimport React, { useState } from \"react\";\nimport { useRouter } from \"next/router\";\nimport ProductCard from \"components/ProductCard/ProductCard\";\nimport { ProductsRow, ProductsCol, ButtonWrapper, LoaderWrapper, LoaderItem, ProductCardWrapper } from \"./ServiceProvidersList.style\";\nimport { CURRENCY } from \"helper/constant\";\nimport { useQuery } from \"@apollo/react-hooks\";\nimport { GET_SERVICE_PROVIDERS } from \"../../graphql/query/serviceProvider.query\";\nimport Button from \"components/Button/Button\";\nimport Loader from \"components/Loader/Loader\";\nimport Placeholder from \"components/Placeholder/Placeholder\";\nimport Fade from \"react-reveal/Fade\";\nimport NoResultFound from \"components/NoResult/NoResult\";\nexport const ServiceProviders = ({\n  deviceType,\n  type,\n  fetchLimit = 8,\n  loadMore = true\n}) => {\n  const router = useRouter();\n  const {\n    0: loadingMore,\n    1: toggleLoading\n  } = useState(false);\n  const {\n    data,\n    error,\n    loading,\n    fetchMore\n  } = useQuery(GET_SERVICE_PROVIDERS, {\n    variables: {\n      offset: 0,\n      limit: fetchLimit\n    }\n  });\n  const handleOnClick = React.useCallback((item, deviceType) => {\n    const as = `/serviceProvider/${item.id}`;\n    router.push(router.pathname, as);\n  }, []);\n\n  if (loading) {\n    return __jsx(LoaderWrapper, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 7\n      }\n    }, __jsx(LoaderItem, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }\n    }, __jsx(Placeholder, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }\n    })), __jsx(LoaderItem, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }\n    }, __jsx(Placeholder, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 11\n      }\n    })), __jsx(LoaderItem, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }\n    }, __jsx(Placeholder, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }\n    })));\n  }\n\n  if (error) return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 21\n    }\n  }, error.message);\n\n  if (!data || !data.serviceProviders || data.serviceProviders.items.length === 0) {\n    return __jsx(NoResultFound, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 12\n      }\n    });\n  }\n\n  const handleLoadMore = () => {\n    toggleLoading(true);\n    fetchMore({\n      variables: {\n        offset: Number(data.serviceProviders.items.length),\n        limit: fetchLimit\n      },\n      updateQuery: (prev, {\n        fetchMoreResult\n      }) => {\n        toggleLoading(false);\n\n        if (!fetchMoreResult) {\n          return prev;\n        }\n\n        return {\n          serviceProviders: {\n            __typename: prev.serviceProviders.__typename,\n            items: [...prev.serviceProviders.items, ...fetchMoreResult.serviceProviders.items],\n            hasMore: fetchMoreResult.serviceProviders.hasMore\n          }\n        };\n      }\n    });\n  };\n\n  return __jsx(React.Fragment, null, __jsx(ProductsRow, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }\n  }, data.serviceProviders.items.map((item, index) => __jsx(ProductsCol, {\n    key: index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 11\n    }\n  }, __jsx(ProductCardWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 13\n    }\n  }, __jsx(Fade, {\n    duration: 800,\n    delay: index * 10,\n    style: {\n      height: \"100%\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 15\n    }\n  }, __jsx(ProductCard, {\n    title: item.name,\n    description: item.email,\n    image: item.image,\n    weight: item.unit,\n    currency: CURRENCY,\n    price: item.price,\n    salePrice: item.salePrice,\n    discountInPercent: item.discountInPercent,\n    data: item,\n    deviceType: deviceType,\n    onClick: () => handleOnClick(item, deviceType),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 17\n    }\n  })))))), loadMore && data.serviceProviders.hasMore && __jsx(ButtonWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 9\n    }\n  }, __jsx(Button, {\n    onClick: handleLoadMore,\n    title: \"Load More\",\n    intlButtonId: \"loadMoreBtn\",\n    size: \"small\",\n    isLoading: loadingMore,\n    loader: __jsx(Loader, {\n      color: \"#fed700\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 21\n      }\n    }),\n    style: {\n      minWidth: 135,\n      backgroundColor: \"#ffffff\",\n      border: \"1px solid #f1f1f1\",\n      color: \"#fed700\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 11\n    }\n  })));\n};\nexport default ServiceProviders;","map":{"version":3,"sources":["/Volumes/Second/npm/PFE_git/packages/shop/containers/ServiceProvidersList/ServiceProvidersList.tsx"],"names":["React","useState","useRouter","ProductCard","ProductsRow","ProductsCol","ButtonWrapper","LoaderWrapper","LoaderItem","ProductCardWrapper","CURRENCY","useQuery","GET_SERVICE_PROVIDERS","Button","Loader","Placeholder","Fade","NoResultFound","ServiceProviders","deviceType","type","fetchLimit","loadMore","router","loadingMore","toggleLoading","data","error","loading","fetchMore","variables","offset","limit","handleOnClick","useCallback","item","as","id","push","pathname","message","serviceProviders","items","length","handleLoadMore","Number","updateQuery","prev","fetchMoreResult","__typename","hasMore","map","index","height","name","email","image","unit","price","salePrice","discountInPercent","minWidth","backgroundColor","border","color"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { useRouter } from \"next/router\";\nimport dynamic from \"next/dynamic\";\nimport gql from \"graphql-tag\";\nimport { openModal, closeModal } from \"@redq/reuse-modal\";\nimport ProductCard from \"components/ProductCard/ProductCard\";\nimport {\n  ProductsRow,\n  ProductsCol,\n  ButtonWrapper,\n  LoaderWrapper,\n  LoaderItem,\n  ProductCardWrapper,\n} from \"./ServiceProvidersList.style\";\nimport { CURRENCY } from \"helper/constant\";\nimport { useQuery } from \"@apollo/react-hooks\";\nimport { GET_SERVICE_PROVIDERS } from \"../../graphql/query/serviceProvider.query\";\nimport Button from \"components/Button/Button\";\nimport Loader from \"components/Loader/Loader\";\nimport Placeholder from \"components/Placeholder/Placeholder\";\nimport Fade from \"react-reveal/Fade\";\nimport NoResultFound from \"components/NoResult/NoResult\";\n\ntype ServiceProvidersProps = {\n  deviceType?: {\n    mobile: boolean;\n    tablet: boolean;\n    desktop: boolean;\n  };\n  type: string;\n  fetchLimit?: number;\n  loadMore?: boolean;\n};\nexport const ServiceProviders: React.FC<ServiceProvidersProps> = ({\n  deviceType,\n  type,\n  fetchLimit = 8,\n  loadMore = true,\n}) => {\n  const router = useRouter();\n  const [loadingMore, toggleLoading] = useState(false);\n  const { data, error, loading, fetchMore } = useQuery(GET_SERVICE_PROVIDERS, {\n    variables: {\n      offset: 0,\n      limit: fetchLimit,\n    },\n  });\n\n  const handleOnClick = React.useCallback((item: any, deviceType: any) => {\n    const as = `/serviceProvider/${item.id}`;\n    router.push(router.pathname, as);\n  }, []);\n\n  if (loading) {\n    return (\n      <LoaderWrapper>\n        <LoaderItem>\n          <Placeholder />\n        </LoaderItem>\n        <LoaderItem>\n          <Placeholder />\n        </LoaderItem>\n        <LoaderItem>\n          <Placeholder />\n        </LoaderItem>\n      </LoaderWrapper>\n    );\n  }\n\n  if (error) return <div>{error.message}</div>;\n  if (\n    !data ||\n    !data.serviceProviders ||\n    data.serviceProviders.items.length === 0\n  ) {\n    return <NoResultFound />;\n  }\n  const handleLoadMore = () => {\n    toggleLoading(true);\n    fetchMore({\n      variables: {\n        offset: Number(data.serviceProviders.items.length),\n        limit: fetchLimit,\n      },\n      updateQuery: (prev, { fetchMoreResult }) => {\n        toggleLoading(false);\n        if (!fetchMoreResult) {\n          return prev;\n        }\n        return {\n          serviceProviders: {\n            __typename: prev.serviceProviders.__typename,\n            items: [\n              ...prev.serviceProviders.items,\n              ...fetchMoreResult.serviceProviders.items,\n            ],\n            hasMore: fetchMoreResult.serviceProviders.hasMore,\n          },\n        };\n      },\n    });\n  };\n\n  return (\n    <>\n      <ProductsRow>\n        {data.serviceProviders.items.map((item: any, index: number) => (\n          <ProductsCol key={index}>\n            <ProductCardWrapper>\n              <Fade\n                duration={800}\n                delay={index * 10}\n                style={{ height: \"100%\" }}\n              >\n                <ProductCard\n                  title={item.name}\n                  description={item.email}\n                  image={item.image}\n                  weight={item.unit}\n                  currency={CURRENCY}\n                  price={item.price}\n                  salePrice={item.salePrice}\n                  discountInPercent={item.discountInPercent}\n                  data={item}\n                  deviceType={deviceType}\n                  onClick={() => handleOnClick(item, deviceType)}\n                />\n              </Fade>\n            </ProductCardWrapper>\n          </ProductsCol>\n        ))}\n      </ProductsRow>\n      {loadMore && data.serviceProviders.hasMore && (\n        <ButtonWrapper>\n          <Button\n            onClick={handleLoadMore}\n            title=\"Load More\"\n            intlButtonId=\"loadMoreBtn\"\n            size=\"small\"\n            isLoading={loadingMore}\n            loader={<Loader color=\"#fed700\" />}\n            style={{\n              minWidth: 135,\n              backgroundColor: \"#ffffff\",\n              border: \"1px solid #f1f1f1\",\n              color: \"#fed700\",\n            }}\n          />\n        </ButtonWrapper>\n      )}\n    </>\n  );\n};\nexport default ServiceProviders;\n"]},"metadata":{},"sourceType":"module"}