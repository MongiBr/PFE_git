{"version":3,"file":"static/webpack/static/development/pages/checkout.js.dd1a8ff0d226a1e1bdd7.hot-update.js","sources":["webpack:///./contexts/profile/profile.provider.tsx"],"sourcesContent":["import React, { useReducer } from \"react\";\nimport uuidV4 from \"uuid/v4\";\nimport schedules from \"containers/Checkout/data\";\nimport { ProfileContext } from \"./profile.context\";\n\ntype Action =\n  | { type: \"HANDLE_ON_INPUT_CHANGE\"; payload: any }\n  | { type: \"ADD_OR_UPDATE_CONTACT\"; payload: any }\n  | { type: \"DELETE_CONTACT\"; payload: any }\n  | { type: \"ADD_OR_UPDATE_ADDRESS\"; payload: any }\n  | { type: \"DELETE_ADDRESS\"; payload: any }\n  | { type: \"ADD_CARD\"; payload: any }\n  | { type: \"DELETE_CARD\"; payload: any }\n  | { type: \"SET_PRIMARY_CONTACT\"; payload: any }\n  | { type: \"SET_PRIMARY_ADDRESS\"; payload: any }\n  | { type: \"SET_PRIMARY_SCHEDULE\"; payload: any }\n  | { type: \"SET_PRIMARY_CARD\"; payload: any };\nfunction reducer(state: any, action: Action): any {\n  switch (action.type) {\n    case \"HANDLE_ON_INPUT_CHANGE\":\n      return { ...state, [action.payload.field]: action.payload.value };\n    case \"ADD_OR_UPDATE_CONTACT\":\n      if (action.payload.id) {\n        return {\n          ...state,\n          contacts: state.contacts.map((item: any) =>\n            item.id === action.payload.id\n              ? { ...item, ...action.payload }\n              : item\n          ),\n        };\n      }\n      const newContact = {\n        ...action.payload,\n        id: uuidV4(),\n        type: state.contacts.length === \"0\" ? \"primary\" : \"secondary\",\n      };\n      return {\n        ...state,\n        contacts: [...state.contacts, newContact],\n      };\n\n    case \"DELETE_CONTACT\":\n      return {\n        ...state,\n        contacts: state.contacts.filter(\n          (item: any) => item.id !== action.payload\n        ),\n      };\n    case \"ADD_OR_UPDATE_ADDRESS\":\n      if (action.payload.id) {\n        return {\n          ...state,\n          addresses: state.addresses.map((item: any) =>\n            item.id === action.payload.id\n              ? { ...item, ...action.payload }\n              : item\n          ),\n        };\n      }\n      const newAdress = {\n        ...action.payload,\n        id: uuidV4(),\n        type: state.addresses.length === \"0\" ? \"primary\" : \"secondary\",\n      };\n      return {\n        ...state,\n        addresses: [...state.addresses, newAdress],\n      };\n    case \"DELETE_ADDRESS\":\n      return {\n        ...state,\n        addresses: state.addresses.filter(\n          (item: any) => item.id !== action.payload\n        ),\n      };\n    case \"ADD_CARD\":\n      const newCard = {\n        id: action.payload.id,\n        type: state.card.length === \"0\" ? \"primary\" : \"secondary\",\n        cardType: action.payload.brand.toLowerCase(),\n        name: state.name,\n        lastFourDigit: action.payload.last4,\n      };\n      return {\n        ...state,\n        card: [newCard, ...state.card],\n      };\n    case \"DELETE_CARD\":\n      return {\n        ...state,\n        card: state.card.filter((item: any) => item.id !== action.payload),\n      };\n    case \"SET_PRIMARY_CONTACT\":\n      return {\n        ...state,\n        contacts: state.contacts.map((item: any) =>\n          item.id === action.payload\n            ? { ...item, type: \"primary\" }\n            : { ...item, type: \"secondary\" }\n        ),\n      };\n    case \"SET_PRIMARY_ADDRESS\":\n      return {\n        ...state,\n        addresses: state.addresses.map((item: any) =>\n          item.id === action.payload\n            ? { ...item, type: \"primary\" }\n            : { ...item, type: \"secondary\" }\n        ),\n      };\n    case \"SET_PRIMARY_SCHEDULE\":\n      return {\n        ...state,\n        schedules: state.schedules.map((item: any) =>\n          item.id === action.payload\n            ? { ...item, type: \"primary\" }\n            : { ...item, type: \"secondary\" }\n        ),\n      };\n    case \"SET_PRIMARY_CARD\":\n      return {\n        ...state,\n        card: state.card.map((item: any) =>\n          item.id === action.payload\n            ? { ...item, type: \"primary\" }\n            : { ...item, type: \"secondary\" }\n        ),\n      };\n    default:\n      return state;\n  }\n}\n\ntype ProfileProviderProps = {\n  initData: any;\n};\n\nexport const ProfileProvider: React.FunctionComponent<ProfileProviderProps> = ({\n  children,\n  initData,\n}) => {\n  const [state, dispatch] = useReducer(reducer, { ...initData, schedules });\n  // console.log(state, 'profile provider state');\n\n  return (\n    <ProfileContext.Provider value={{ state, dispatch }}>\n      {children}\n    </ProfileContext.Provider>\n  );\n};\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AAaA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAEA;AAAA;AAAA;AAFA;AAQA;AACA;AAAA;AAEA;AACA;AAHA;AACA;AAIA;AAEA;AAFA;AACA;AAIA;AACA;AAEA;AACA;AAAA;AAHA;AACA;AAKA;AACA;AACA;AAEA;AAAA;AAAA;AAFA;AAQA;AACA;AAAA;AAEA;AACA;AAHA;AACA;AAIA;AAEA;AAFA;AACA;AAGA;AACA;AAEA;AACA;AAAA;AAHA;AACA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AAEA;AAFA;AACA;AAGA;AACA;AAEA;AAAA;AAAA;AAFA;AACA;AAGA;AACA;AAEA;AAAA;AAEA;AADA;AAEA;AAFA;AADA;AAFA;AACA;AAOA;AACA;AAEA;AAAA;AAEA;AADA;AAEA;AAFA;AADA;AAFA;AACA;AAOA;AACA;AAEA;AAAA;AAEA;AADA;AAEA;AAFA;AADA;AAFA;AACA;AAOA;AACA;AAEA;AAAA;AAEA;AADA;AAEA;AAFA;AADA;AAFA;AACA;AAOA;AACA;AAhHA;AAkHA;AACA;AAKA;AAGA;AAAA;AACA;AADA;AACA;AAAA;AADA;AAAA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;;;;A","sourceRoot":""}