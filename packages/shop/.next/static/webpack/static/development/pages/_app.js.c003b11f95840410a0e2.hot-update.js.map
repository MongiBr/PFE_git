{"version":3,"file":"static/webpack/static/development/pages/_app.js.c003b11f95840410a0e2.hot-update.js","sources":["webpack:///./contexts/search/search.provider.tsx"],"sourcesContent":["import React, { useReducer, useEffect } from \"react\";\nimport { SearchContext } from \"./search.context\";\ntype ActionType = { type: \"UPDATE\" | \"RESET\"; payload: object };\n\nfunction reducer(state: any, action: ActionType): any {\n  switch (action.type) {\n    case \"UPDATE\":\n      return { ...state, ...action.payload };\n    case \"RESET\":\n      return { page: 1 };\n    default:\n      return state;\n  }\n}\n\ntype SearchProviderProps = {\n  query: any;\n};\n\nexport const SearchProvider: React.FunctionComponent<SearchProviderProps> = ({\n  children,\n  query,\n}) => {\n  const [state, dispatch] = useReducer(reducer, { ...query, page: 1 });\n  const updateSearch = (search) => {\n    dispatch({ type: \"UPDATE\", payload: search });\n    localStorage.setItem(\"search\", search);\n  };\n  /*  useEffect(() => {\n    const search = localStorage.getItem(\"search\");\n    console.log(search);\n\n    if (search || search === \"undefined\" || search === \"null\") {\n      updateSearch(search);\n    } else {\n      updateSearch(\"e\");\n    }\n    console.log(search);\n  }, []);*/\n  return (\n    <SearchContext.Provider value={{ state, dispatch, updateSearch }}>\n      {children}\n    </SearchContext.Provider>\n  );\n};\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AANA;AAQA;AACA;AAKA;AAGA;AAAA;AACA;AADA;AACA;AAAA;AADA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;;;;;;;;;;;;AAWA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;;;;A","sourceRoot":""}