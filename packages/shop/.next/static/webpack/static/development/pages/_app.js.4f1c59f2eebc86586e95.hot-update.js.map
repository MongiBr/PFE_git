{"version":3,"file":"static/webpack/static/development/pages/_app.js.4f1c59f2eebc86586e95.hot-update.js","sources":["webpack:///./containers/LayoutContainer/AppLayout.tsx"],"sourcesContent":["import React, { FunctionComponent } from \"react\";\nimport dynamic from \"next/dynamic\";\nimport { useRouter } from \"next/router\";\nimport Sticky from \"react-stickynode\";\nimport styled from \"styled-components\";\n\nimport Header from \"./Header/Header\";\nimport { useStickyState } from \"contexts/app/app.provider\";\nimport {\n  HOME_PAGE,\n  GROCERY_PAGE,\n  Food_PAGE,\n} from \"containers/constants/navigation\";\nconst MobileHeader = dynamic(() => import(\"./Header/MobileHeader\"), {\n  ssr: false,\n});\nconst LayoutWrapper = styled.div`\n  background-color: #f7f7f7;\n\n  .reuseModalHolder {\n    padding: 0;\n    overflow: auto;\n    border-radius: 3px 3px 0 0;\n    border: 0;\n  }\n`;\n\ntype LayoutProps = {\n  className?: string;\n  deviceType: {\n    mobile: boolean;\n    tablet: boolean;\n    desktop: boolean;\n  };\n  token?: string;\n};\n\nconst Layout: FunctionComponent<LayoutProps> = ({\n  className,\n  children,\n  deviceType: { mobile, tablet, desktop },\n  token,\n}) => {\n  const isSticky = useStickyState(\"isSticky\");\n  const { pathname } = useRouter();\n\n  const isHomePage =\n    pathname === HOME_PAGE ||\n    pathname === GROCERY_PAGE ||\n    pathname === Food_PAGE;\n\n  return (\n    <LayoutWrapper className={`layoutWrapper ${className}`}>\n      {(mobile || tablet) && (\n        <Sticky enabled={isSticky} innerZ={1001}>\n          <MobileHeader\n            className={`${isSticky ? \"sticky\" : \"unSticky\"} ${\n              isHomePage ? \"home\" : \"\"\n            }`}\n            pathname={pathname}\n          />\n        </Sticky>\n      )}\n\n      {desktop && (\n        <Sticky enabled={isSticky} innerZ={1001}>\n          <MobileHeader\n            className={`${isSticky ? \"sticky\" : \"unSticky\"} ${\n              isHomePage ? \"home\" : \"\"\n            } desktop`}\n            pathname={pathname}\n          />\n          <Header\n            className={`${isSticky ? \"sticky\" : \"unSticky\"} ${\n              isHomePage ? \"home\" : \"\"\n            }`}\n            token={token}\n            pathname={pathname}\n          />\n        </Sticky>\n      )}\n      {children}\n    </LayoutWrapper>\n  );\n};\n\nexport default Layout;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAKA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AACA;AAoBA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAFA;AAAA;AACA;AAGA;AAKA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAGA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAGA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AAGA;AACA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAYA;AACA;AACA;;;;A","sourceRoot":""}